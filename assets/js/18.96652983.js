(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{290:function(s,e,r){"use strict";r.r(e);var t=r(14),a=Object(t.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"模块化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模块化"}},[s._v("#")]),s._v(" 模块化")]),s._v(" "),e("p",[s._v("model.exports可简化为exports，使用require导入时，得到的永远是以model.exports为准")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("module.exports = {\n  sb:'sb'\n}\n")])])]),e("p",[s._v("npm init -y 创建一个json文件记录包的使用")]),s._v(" "),e("p",[e("code",[s._v("app.use")]),s._v("用来注册全局中间件")]),s._v(" "),e("h3",{attrs:{id:"中间件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#中间件"}},[s._v("#")]),s._v(" 中间件")]),s._v(" "),e("p",[s._v("除了错误级别的中间件， 其他中间件必须配置在路由之前， "),e("code",[s._v("app.use()")])]),s._v(" "),e("h3",{attrs:{id:"监听req的data事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#监听req的data事件"}},[s._v("#")]),s._v(" 监听req的data事件")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 2. 监听 req 的 data 事件\n  req.on('data', (chunk) => {\n    str += chunk\n  })\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("res.send(req.body)可以返回值给请求端\n")])])]),e("h2",{attrs:{id:"使用express编写接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用express编写接口"}},[s._v("#")]),s._v(" 使用express编写接口")]),s._v(" "),e("h2",{attrs:{id:"数据库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据库"}},[s._v("#")]),s._v(" 数据库")]),s._v(" "),e("h4",{attrs:{id:"检索数据库内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#检索数据库内容"}},[s._v("#")]),s._v(" 检索数据库内容")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("select username from users\n")])])]),e("h4",{attrs:{id:"插入数据行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#插入数据行"}},[s._v("#")]),s._v(" 插入数据行")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("insert into users (username, password, status) values ('tony stark', '098123', 0)\n")])])]),e("h4",{attrs:{id:"修改用户密码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改用户密码"}},[s._v("#")]),s._v(" 修改用户密码")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("update users set password='888888' where id=4\nupdate users set passsword='admin123',status=1 where id=2\n")])])]),e("h4",{attrs:{id:"删除"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[s._v("#")]),s._v(" 删除")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("delete from users where id=4 \n//注意写id\n")])])]),e("h5",{attrs:{id:"限定条件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#限定条件"}},[s._v("#")]),s._v(" 限定条件")]),s._v(" "),e("p",[s._v("where")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//and\nselect * from users where status=0 and id<3\n//or\nselect * from users where status=1 or id=1\n")])])]),e("p",[s._v("升序排序order by\n降序排序")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("select * from users order by status\nselect * from users d by status desc\n")])])]),e("p",[s._v("多重排序")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("先按status降序，再username升序\nselect * from users order by status desc,username asc\n")])])]),e("p",[s._v("count(*)统计数据条数")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("select count(*) from users where status=0\n")])])]),e("p",[s._v("给列起别名")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("select username as uname,password as pw from users\n")])])]),e("h3",{attrs:{id:"插入数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#插入数据"}},[s._v("#")]),s._v(" 插入数据")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const mysql = require('mysql')\nconst db = mysql.createPool({\n    host: '127.0.0.1',\n    user: 'root',\n    password: 'admin123',\n    database: 'myday1'\n})\n检查是否链接\ndb.query('select 1', (err, results) => {\n    if(err) return console.log((err.message));\n    console.log(results);\n})\n\n查询user表所有数据\nconst sqlStr = 'select * from users'\ndb.query(sqlStr, (err, results) => {\n    //查询数据失败\n    if(err) return console.log(err.message);\n    //如果成功\n    console.log(results);//返回数组{[......]}\n})\n\n插入数据\nconst user = {username: 'superman', password: 'pdd123', status:0}\n//定义待执行的sql语句\nconst sqlStr = 'insert into users (username, password, status) values (?, ?, ?) '\n//执行sql语句\ndb.query(sqlStr, [user.username, user.password, user.status], (err, result) => {\n    if(err) return console.log(err.message);\n    //成功\n    //此时result是一个对象\n    if(result.affectedRows === 1) {\n        console.log('插入数据成功');\n    }\n})\n\n\n//便捷插入数据\nconst user = {username: 'superman1', password: 'pdd1231', status:0}\nconst sqlStr = 'insert into users set ? '\n//执行sql语句\ndb.query(sqlStr, user, (err, results) => {\n    if(err) return console.log(err.message);\n    if(results.affectedRows === 1) {\n        console.log('插入数据成功');\n    }\n\n})\n\n")])])]),e("h3",{attrs:{id:"更新数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新数据"}},[s._v("#")]),s._v(" 更新数据")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("插入数据\nconst user = {username: 'superman', password: 'pdd123', status:0}\n//定义待执行的sql语句\nconst sqlStr = 'insert into users (username, password, status) values (?, ?, ?) '\n//执行sql语句\ndb.query(sqlStr, [user.username, user.password, user.status], (err, result) => {\n    if(err) return console.log(err.message);\n    //成功\n    //此时result是一个对象\n    if(result.affectedRows === 1) {\n        console.log('插入数据成功');\n    }\n})\n\n\n便捷插入数据\nconst user = {username: 'superman1', password: 'pdd1231', status:0}\nconst sqlStr = 'insert into users set ? '\n//执行sql语句\ndb.query(sqlStr, user, (err, results) => {\n    if(err) return console.log(err.message);\n    if(results.affectedRows === 1) {\n        console.log('插入数据成功');\n    }\n\n})\nconst user = {id:6, username: 'aaa', password: '000'}\n\n定义sql语句\nconst sqlStr = 'update users set username=?, password=? where id=?'\ndb.query(sqlStr, [user.username, user.password, user.id], (err,results) => {\n    if(err) return console.log(err.message);\n    if(results.affectedRows === 1) {\n        console.log('更新成功');\n    }\n})\n\n// 更新的便捷操作\nconst user = {id:6, username: 'aaab', password: '0001'}\nconst sqlStr = 'update users set ? where id=?'\ndb.query(sqlStr, [user, user.id], (err,results) => {\n    if(err) return console.log(err.message);\n    if(results.affectedRows === 1) {\n        console.log('更新成功');\n    }\n})\n")])])]),e("h5",{attrs:{id:"如果只有一个占位符可以省略数组表示-否则用数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如果只有一个占位符可以省略数组表示-否则用数组"}},[s._v("#")]),s._v(" 如果只有一个占位符可以省略数组表示，否则用数组")]),s._v(" "),e("h3",{attrs:{id:"删除数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除数据"}},[s._v("#")]),s._v(" 删除数据")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//删除数据\nconst sqlStr = 'delete from users where id=?'\ndb.query(sqlStr, 5, (err, results) => {\n    if(err) return console.log(err.message);\n    if(results.affectedRows === 1) {\n        console.log('更新成功');\n    }\n})\n//标记删除,用状态标记即可\nconst sqlStr = 'update users set status=? id=2'\ndb.query(sqlStr, [1, 6], (err, results) => {\n    if(err) return console.log(err.message);\n    if(results.affectedRows === 1) {\n        console.log('更新成功');\n    }\n})\n")])])]),e("h3",{attrs:{id:"身份认证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#身份认证"}},[s._v("#")]),s._v(" 身份认证")]),s._v(" "),e("p",[s._v("如果只是前端建议用session，前后端交互使用jwt，可跨域")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("jsonwebtoken包将用户信息转换成token， express-jwt包  token还原成用户信jwt是一种加密方式\n")])])]),e("p",[s._v("只要配置成功了jwt中间件，就可以把解析出来的用户信息挂载到req。user属性上，新版本user改成了auth")])])}),[],!1,null,null,null);e.default=a.exports}}]);